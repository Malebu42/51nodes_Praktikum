require('dotenv').config();
const { ethers, run, network } = require('hardhat'); //for hardhat

async function main() {
  const SimpleStorageFactory = await ethers.getContractFactory('SimpleStorage');

  console.log('Deploying, please wait...'); //deploys contract
  const contract = await SimpleStorageFactory.deploy();

  console.log(`Deployed contract to: ${contract.address}`);
  //automatically has the hardhat network
  // 4 == 4, true 4 == "4", false 4 === "4", true
  if (network.config.chainId === 4 && process.env.ETHERSCAN_API_KEY) {
    //await SimpleStorageFactory.deployTransaction.wait(6);
    await verify(SimpleStorageFactory.address, []); //simpleStorage
  }
}

async function verify(contractAddress, args) {
  //for etherscan
  console.log('Verifying contract...');
  try {
    await run('verify:verify', {
      address: contractAddress,
      constructorArguments: args,
    });
  } catch (e) {
    if (e.message.include('already verified')) {
      //e.message.toLowerCase().include
      console.log('Already verified!');
    } else {
      console.log(e); //e not defined?
    }
  }
}

//main here
main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
